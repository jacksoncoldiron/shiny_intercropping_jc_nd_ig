---
title: "Intercropping Data Exploration"
author: 'Isa Elias'
editor: visual
format: 
  html:
    embed-resources: true
    code-fold: true
    toc: true
execute:
  warning: false
  message: false
---

## Load Libs

```{r}
library(tidyverse)
library(janitor)
library(here)
```

## Load data and clean

```{r}

### load data ###  
intercrop <- read_delim(delim = ';', here::here("data", "Database.csv"))

### Convert relevant columns to numeric data and create new column extracting experiment start year from the experimental period ### 
intercrop$Yield_total_intercropping <- as.numeric(gsub(",", ".", intercrop$Yield_total_intercropping))
intercrop$LER_tot <- as.numeric(gsub(",", ".", intercrop$LER_tot))
intercrop$LER_crop1 <- as.numeric(gsub(",", ".", intercrop$LER_crop1))
intercrop$LER_crop2 <- as.numeric(gsub(",", ".", intercrop$LER_crop2))

intercrop <- intercrop|>
  mutate(start_year = as.numeric(str_extract(intercrop$Experiment_period, "^[0-9]{4}")))|>
  mutate(end_year = as.numeric(str_extract(intercrop$Experiment_period, "[0-9]{4}$")))


### TAB 2: LER plots data setup ###
intercrop_LER <- intercrop |>
  select('Country', 'Continent', 'end_year', 'Crop_1_Common_Name', 'Crop_2_Common_Name', 'LER_crop1', 'LER_crop2', 'LER_tot', 'Intercropping_design', 'Intercropping_pattern', 'Greenhouse', 'Experiment_year', 'Organic_ferti', 'Mineral_ferti') |>
  janitor::clean_names() |>
  rename(crop1 = crop_1_common_name, crop2 = crop_2_common_name, year = end_year) |>
  mutate(intercropping_pattern = as.factor(intercropping_pattern)) |>
  mutate(country = as.factor(country))

```

## Explore data

```{r}
unique(intercrop_LER$crop1)
unique(intercrop_LER$crop2)

crop1_freq <- intercrop_LER |>
  group_by(crop1)|>
  summarize(n = n())|>
  arrange(desc(n))|>
  slice(1:15)

ggplot(intercrop_LER |> filter(crop1 %in% crop1_freq$crop1), aes(x = crop1))+
  geom_bar()

crop2_freq <- intercrop_LER |>
  group_by(crop2)|>
  summarize(n = n())|>
  arrange(desc(n))|>
  slice(1:15)

ggplot(intercrop_LER |> filter(crop2 %in% crop2_freq$crop2), aes(x = crop2))+
  geom_bar()

intercrop_LER_top <- intercrop_LER|>
  filter(crop1 %in% crop1_freq$crop1)

unique(intercrop_LER_top$crop1)
unique(intercrop_LER_top$crop2)

# Find overlap between crop1 name and crop2 name
unique(intercrop_LER_top$crop1)[(unique(intercrop_LER_top$crop1) %in% unique(intercrop_LER_top$crop2))]

common_crops <- intersect(intercrop_LER_top$crop1, intercrop_LER_top$crop2)

length(common_crops)
```

### Look at Maize

```{r}

crop_1 <- 'Maize'

crop_1_intercrop_LER <- intercrop_LER|>
  filter(crop1 == crop_1)|>
  drop_na(ler_crop1)


crop2_top10 <- crop_1_intercrop_LER |>
  group_by(crop2)|>
  summarize(n = n())|>
  arrange(desc(n))|>
  slice(1:10)

# ggplot(crop_1_intercrop_LER |> filter(crop2 %in% crop2_top10$crop2)|> drop_na(ler_crop1, ler_crop2), 
#        aes(x = year, color = crop2))+
#   geom_line()+
#   theme_bw()+
#   labs(x = 'Year', y = 'Cumulative experiment count', color = 'Crop 2 type', title = 'Frequency of experiments with complementary crops')
```

### Plot Maize vs Bean LER comparison

```{r}


crop_1 <- 'Maize'
crop_2 <- 'Bean'

crop_1_intercrop_LER <- intercrop_LER|>
  filter(crop1 == crop_1)

crop_12 <- crop_1_intercrop_LER |>
  filter(crop2 == crop_2)|>
  drop_na(ler_crop1, ler_crop2)

ggplot(data = crop_12)+
  geom_point(aes(x=ler_crop1, y = ler_crop2, color = intercropping_pattern))+
  geom_segment(aes(x = 0, y = 1, xend = 1, yend = 0), 
             linetype = "dashed", color = "black") +
  #xlim(0,1.25)+
  #ylim(0,1.25)+
  labs(x = "Maize LER", y = "Bean LER")+
  theme_bw()
```

### Plot LERs for three crop type combos

```{r}


crop_1a <- 'Maize'
crop_2a <- 'Bean' # Cowpea

crop_1b <- 'Apple'
crop_2b <- 'Maize' # Millet Maize Peanut

crop_1c <- 'Tomato'
crop_2c <- 'Maize' #Cucumber Lettuce Wheat Maize Cowpea Bean

legend_vec <- c(paste(crop_1a, "and", crop_2a), paste(crop_1b, "and", crop_2b), paste(crop_1c, "and", crop_2c))

ggplot()+
  geom_point(data = intercrop_LER|> filter(crop1 == crop_1a, crop2 == crop_2a) |> drop_na(ler_crop1, ler_crop2),
             aes(x=ler_crop1, y = ler_crop2, color = , color=legend_vec[1], shape = intercropping_pattern))+
  geom_point(data = intercrop_LER|> filter(crop1 == crop_1b, crop2 == crop_2b) |> drop_na(ler_crop1, ler_crop2),
             aes(x=ler_crop1, y = ler_crop2, color=, color=legend_vec[2], shape = intercropping_pattern))+
  geom_point(data = intercrop_LER|> filter(crop1 == crop_1c, crop2 == crop_2c) |> drop_na(ler_crop1, ler_crop2),
             aes(x=ler_crop1, y = ler_crop2, color=legend_vec[3], shape = intercropping_pattern))+
  geom_segment(aes(x = 0, y = 1, xend = 1, yend = 0), 
             linetype = "dashed", color = "black") +
  #xlim(0,1.25)+
  #ylim(0,1.25)+
  labs(x = "crop 1 LER", y = "crop 2 LER", color = "crop combination") + 
  theme_bw()
  
```

## Line plot of crop 1 experiments with different crops over time

```{r}


crop1_select = 'Maize'

# find top 10 crop2s based on crop1
crop2_top <- intercrop_LER |>
  filter(crop1 == crop1_select)|>
  group_by(crop2)|>
  summarize(n = n())|>
  arrange(desc(n))|>
  slice(1:10)|>
  pull(crop2)

# set up data for cumulative experiments by crop 
intercrop_LER_time_crops <- intercrop_LER |>
  select(c(crop1, crop2, year)) |>
  filter(crop1 == crop1_select, crop2 %in% crop2_top)|>
  drop_na() |>
  group_by(year, crop1, crop2) |>
  summarise(count = n(), .groups = "drop") |>
  arrange(year, crop2)

cumulative_exps_by_crop <- intercrop_LER_time_crops |>
  group_by(crop1, crop2) |>
  mutate(cumulative_experiments = cumsum(count))

# Calculate final cumulative experiment count per crop2
final_cumulative_counts <- cumulative_exps_by_crop |>
  group_by(crop2) |>
  summarise(total_cumulative = max(cumulative_experiments, na.rm = TRUE), .groups = "drop") |>
  arrange(desc(total_cumulative))  # Order by highest count

# Merge back into main data
cumulative_exps_by_crop <- cumulative_exps_by_crop |>
  left_join(final_cumulative_counts, by = "crop2") |>
  mutate(crop2 = factor(crop2, 
                        levels = final_cumulative_counts$crop2,  # Order by cumulative count
                        labels = paste0(final_cumulative_counts$crop2, " (n=", final_cumulative_counts$total_cumulative, ")"))  # Add count to label
         )

# combine the above altogether into one pipe op
cumulative_exps_by_crop2 <- intercrop_LER_time_crops |>
  group_by(crop1, crop2) |>
  mutate(cumulative_experiments = cumsum(count), 
         total_cumulative = max(cumulative_experiments)) |>
  arrange(desc(total_cumulative)) |> # Order by highest count
  mutate(crop2 = factor(crop2, 
                        levels = final_cumulative_counts$crop2,  # Order by cumulative count
                        labels = paste0(final_cumulative_counts$crop2, # Add count to label
                                        " (n=", final_cumulative_counts$total_cumulative,
                                        ")")))

# now really do it all at once
crop1_crops_over_time <- intercrop_LER |>
  select(c(crop1, crop2, year)) |>
  filter(crop1 == crop1_select, crop2 %in% crop2_top)|>
  drop_na() |>
  group_by(year, crop1, crop2) |>
  summarise(count = n(), .groups = "drop") |>
  group_by(crop2) |>
  mutate(cumulative_count = cumsum(count), 
         total_cumulative = max(cumulative_count)) |>
  arrange(desc(total_cumulative)) |> # Order by highest count to ensure correct order
  mutate(crop2 = factor(crop2, 
                        levels = crop2,  # Order by cumulative count explicitly 
                        labels = paste0(crop2, " (n=", total_cumulative, ")"))) # Add count to label

# Plot
ggplot(data = crop1_crops_over_time, aes(x = year, y = cumulative_count, color = crop2)) +
  geom_point() +
  geom_line() +
  labs(x = 'Year', 
       y = 'Cumulative experiment count', 
       color = 'Crop 2 type') +
  theme_bw()
```
